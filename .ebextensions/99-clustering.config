files:
 "/root/configure.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/usr/bin/env bash
      docker exec rabbitmq rabbitmqctl add_user admin admin
      docker exec rabbitmq rabbitmqctl set_user_tags admin administrator
      docker exec rabbitmq rabbitmqctl add_user rabbit rabbit
      docker exec rabbitmq rabbitmqctl add_vhost /
      docker exec rabbitmq rabbitmqctl set_policy -p / ha-three \"^\" '{\"ha-mode\":\"exactly\", \"ha-params\":${sync_node_count}, \"ha-sync-mode\":\"automatic\", \"message-ttl\":${message_timeout}, \"expires\":${message_timeout}}'
      docker exec rabbitmq rabbitmqctl set_permissions -p / admin \".*\" \".*\" \".*\"
      docker exec rabbitmq rabbitmqctl set_permissions -p / rabbit \".*\" \".*\" \".*\"


commands:
  createpostdir:
    command: "mkdir /opt/elasticbeanstalk/hooks/appdeploy/post"
    ignoreErrors: true

files:    
 "/opt/elasticbeanstalk/hooks/appdeploy/post/99_clustering.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/usr/bin/env bash
      usermod -a -G docker ec2-user
      
      rabbitmqcontainerid=$( docker ps -a -q  --filter ancestor=rabbitmq:3-management)
      
      sleep 2m

      docker stop $rabbitmqcontainerid
      docker rm -f $rabbitmqcontainerid
                 
      docker run -d --name rabbitmq --hostname $HOSTNAME -p 4369:4369 -p 5672:5672 -p 15672:15672 -p 25672:25672 -e RABBITMQ_ERLANG_COOKIE='fadfjdfkdhasfhkdashfjkdh' -v /root/data:/var/lib/rabbitmq -v /root/conf/:/etc/rabbitmq -v /root/bin:/tmp/bin rabbitmq:3-management

      TAG_NAME="aws:autoscaling:groupName"
      INSTANCE_ID="`wget -qO- http://instance-data/latest/meta-data/instance-id`"
      REGION="`wget -qO- http://instance-data/latest/meta-data/placement/availability-zone | sed -e 's:\([0-9][0-9]*\)[a-z]*\$:\\1:'`"
      autscalinggroupname="`aws ec2 describe-tags --filters "Name=resource-id,Values=$INSTANCE_ID" "Name=key,Values=$TAG_NAME" --region $REGION --output=text | cut -f5`"
      
      export AWS_DEFAULT_REGION="$REGION"
     
      DNSES=$(aws ec2 describe-instances --region $REGION --filters "Name=tag:aws:autoscaling:groupName,Values=$autscalinggroupname" "Name=instance-state-name,Values=running" | jq ".Reservations[].Instances[].PrivateDnsName" | xargs)
  
      HOSTNAMES=()
        
        for dns in $DNSES; do
            hostname=($${dns//./ })
            if [ "$hostname" != "$HOSTNAME" ]; then
              HOSTNAMES+=( $hostname )
            fi
        done

      echo $HOSTNAMES
  
      for run in {1..3}; do
        sleep $[ ( $RANDOM % 10 )  + 1 ]s

        docker exec rabbitmq bash -c 'rabbitmqctl stop_app'
        
        NEW_HOSTNAMES=()
        
        for hostname in $HOSTNAMES; do
        
          docker exec rabbitmq bash -c "rabbitmqctl join_cluster rabbit@${hostname}"
          st=$?
          if [ $st -ne 0 ] && [ $st -ne 130 ]; then  # 130 is "already joined"
            NEW_HOSTNAMES+=( $hostname )
          fi
        done
        
        echo $NEW_HOSTNAMES
        docker exec rabbitmq bash -c 'rabbitmqctl start_app'
      done